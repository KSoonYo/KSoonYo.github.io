{"version":3,"file":"component---src-templates-category-js-803c62c119cfd486ba2f.js","mappings":"sLAiDA,MA9CgB,KACd,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAiB5B,OACE,yBAAOC,UAAU,kBACf,0BAAI,cACJ,0BACGF,EAAKG,kBAAkBC,MAAMC,KAAIC,GAChC,sBAAIC,IAAKD,EAASE,YAChB,8BAASF,EAASE,YAEjBF,EAASG,cAAcC,OAAS,GAC/B,0BACGJ,EAASG,cAAcJ,KAAIM,GAC1B,sBAAIJ,IAAKI,EAAYH,YACnB,gBAAC,EAAAI,KAAI,CACHC,GAAK,eAAcP,EAASE,WAAWM,iBAAiBH,EAAYH,WAAWM,iBAE9EH,EAAYH,WAAW,KAAGG,EAAYI,WAAW,aAS5D,ECDZ,MAxCe,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADY,MACCH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIjB,UAAU,gBACZ,gBAAC,EAAAU,KAAI,CAACC,GAAG,KAAKI,IAKhB,gBAAC,EAAAL,KAAI,CAACV,UAAU,mBAAmBW,GAAG,KACnCI,GAML,uBAAKf,UAAU,iBAAiB,oBAAmBiB,GACjD,0BAAQjB,UAAU,iBAAiBmB,GACnC,wBAAMnB,UAAU,eACd,gBAAC,EAAO,MACR,+BAAUgB,IAEZ,8BACE,wBACEI,MAAO,CACLC,YAAa,WAEhB,MACI,IAAIC,MAAOC,cAAc,gBAE9B,qBAAGC,KAAK,4BAA2B,WAEjC,C,qDCuBV,UA3DyB,IAIlB,IAAD,MAHJ1B,MAAM,kBAAEG,EAAiB,KAAEwB,GAAM,YACjCC,EAAW,SACXZ,GACD,EACC,MAAM,SAAEV,EAAQ,YAAEK,GAAgBiB,EAC5BC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjB,EAAmBb,QAAS,kBACxC,MAAEc,GAAU5B,EAElB,OACE,gBAAC,IAAM,CAACa,SAAUA,EAAUC,MAAOY,GACjC,0BAAI,SACKvB,EAAS,IAAC,wBAAM,cAAY,QAAO,IAAE,IAAI,KAC/CK,GAEH,0BACGoB,EAAM1B,KAAI,QAAC,KAAE2B,GAAM,SAClB,sBAAIzB,IAAKyB,EAAKC,GAAI/B,UAAU,sBAC1B,qBAAGwB,KAAMM,EAAKE,OAAOC,MAAOH,EAAKI,YAAYnB,OAAU,KAAG,IACzDe,EAAKI,YAAYC,KACf,KAGF,C","sources":["webpack://gatsby-starter-blog/./src/components/sidebar.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/category.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nconst Sidebar = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n          subcategories: group(\n            field: { frontmatter: { subcategory: SELECT } }\n          ) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <aside className=\"global-sidebar\">\n      <h3> Category </h3>\n      <ul>\n        {data.allMarkdownRemark.group.map(category => (\n          <li key={category.fieldValue}>\n            <strong>{category.fieldValue}</strong>\n\n            {category.subcategories.length > 0 && (\n              <ul>\n                {category.subcategories.map(subcategory => (\n                  <li key={subcategory.fieldValue}>\n                    <Link\n                      to={`/categories/${category.fieldValue.toLowerCase()}/${subcategory.fieldValue.toLowerCase()}`}\n                    >\n                      {subcategory.fieldValue} ({subcategory.totalCount})\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Sidebar from \"./sidebar\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main className=\"global-main\">\n        <Sidebar />\n        <section>{children}</section>\n      </main>\n      <footer>\n        <span\n          style={{\n            marginRight: \"0.5rem\",\n          }}\n        >\n          © {new Date().getFullYear()}, Built with\n        </span>\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst CategoryTemplate = ({\n  data: { allMarkdownRemark, site },\n  pageContext,\n  location,\n}) => {\n  const { category, subcategory } = pageContext\n  const siteTitle = site.siteMetadata?.title || \"Category Title\"\n  const { edges } = allMarkdownRemark\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>\n        카테고리: {category} <span aria-hidden=\"true\"> {\">\"} </span>\n        {subcategory}\n      </h1>\n      <ul>\n        {edges.map(({ node }) => (\n          <li key={node.id} className=\"category-list-item\">\n            <a href={node.fields.slug}>{node.frontmatter.title}</a> -{\" \"}\n            {node.frontmatter.date}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($category: String!, $subcategory: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          subcategory: { eq: $subcategory }\n        }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n"],"names":["data","useStaticQuery","className","allMarkdownRemark","group","map","category","key","fieldValue","subcategories","length","subcategory","Link","to","toLowerCase","totalCount","location","title","children","isRootPath","pathname","header","style","marginRight","Date","getFullYear","href","site","pageContext","siteTitle","siteMetadata","edges","node","id","fields","slug","frontmatter","date"],"sourceRoot":""}