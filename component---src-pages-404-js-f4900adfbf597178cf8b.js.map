{"version":3,"file":"component---src-pages-404-js-f4900adfbf597178cf8b.js","mappings":"sLAiDA,MA9CgB,KACd,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAiB5B,OACE,yBAAOC,UAAU,kBACf,0BAAI,cACJ,0BACGF,EAAKG,kBAAkBC,MAAMC,KAAIC,GAChC,sBAAIC,IAAKD,EAASE,YAChB,8BAASF,EAASE,YAEjBF,EAASG,cAAcC,OAAS,GAC/B,0BACGJ,EAASG,cAAcJ,KAAIM,GAC1B,sBAAIJ,IAAKI,EAAYH,YACnB,gBAAC,EAAAI,KAAI,CACHC,GAAK,eAAcP,EAASE,WAAWM,iBAAiBH,EAAYH,WAAWM,iBAE9EH,EAAYH,WAAW,KAAGG,EAAYI,WAAW,aAS5D,ECDZ,MAxCe,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADY,MACCH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIjB,UAAU,gBACZ,gBAAC,EAAAU,KAAI,CAACC,GAAG,KAAKI,IAKhB,gBAAC,EAAAL,KAAI,CAACV,UAAU,mBAAmBW,GAAG,KACnCI,GAML,uBAAKf,UAAU,iBAAiB,oBAAmBiB,GACjD,0BAAQjB,UAAU,iBAAiBmB,GACnC,wBAAMnB,UAAU,eACd,gBAAC,EAAO,MACR,+BAAUgB,IAEZ,8BACE,wBACEI,MAAO,CACLC,YAAa,WAEhB,MACI,IAAIC,MAAOC,cAAc,gBAE9B,qBAAGC,KAAK,4BAA2B,WAEjC,C,+CCEV,IAhCY,IAAuC,IAAD,MAArC,YAAEC,EAAW,MAAEV,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEU,IAAS3B,EAAAA,EAAAA,gBAAe,cAgB1B4B,EAAkBF,GAAeC,EAAKE,aAAaH,YACnDI,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBb,MAExC,OACE,gCACE,6BAAQc,EAAgB,GAAEd,OAAWc,IAAiBd,GACtD,wBAAMe,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAShB,IACnC,wBAAMiB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YAChCf,EACA,C,iGChCP,MAWaiB,EAAO,IAAM,gBAAC,IAAG,CAAClB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEjB,EAAI,SAAEgB,GAAU,EACtC,MAAMoB,EAAYpC,EAAK4B,KAAKE,aAAab,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOmB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/sidebar.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nconst Sidebar = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n          subcategories: group(\n            field: { frontmatter: { subcategory: SELECT } }\n          ) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <aside className=\"global-sidebar\">\n      <h3> Category </h3>\n      <ul>\n        {data.allMarkdownRemark.group.map(category => (\n          <li key={category.fieldValue}>\n            <strong>{category.fieldValue}</strong>\n\n            {category.subcategories.length > 0 && (\n              <ul>\n                {category.subcategories.map(subcategory => (\n                  <li key={subcategory.fieldValue}>\n                    <Link\n                      to={`/categories/${category.fieldValue.toLowerCase()}/${subcategory.fieldValue.toLowerCase()}`}\n                    >\n                      {subcategory.fieldValue} ({subcategory.totalCount})\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n    </aside>\n  )\n}\n\nexport default Sidebar\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Sidebar from \"./sidebar\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main className=\"global-main\">\n        <Sidebar />\n        <section>{children}</section>\n      </main>\n      <footer>\n        <span\n          style={{\n            marginRight: \"0.5rem\",\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n        </span>\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              github\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","className","allMarkdownRemark","group","map","category","key","fieldValue","subcategories","length","subcategory","Link","to","toLowerCase","totalCount","location","title","children","isRootPath","pathname","header","style","marginRight","Date","getFullYear","href","description","site","metaDescription","siteMetadata","defaultTitle","name","content","property","Head","siteTitle"],"sourceRoot":""}