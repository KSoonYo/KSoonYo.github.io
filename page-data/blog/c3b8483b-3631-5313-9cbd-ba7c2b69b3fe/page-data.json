{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/c3b8483b-3631-5313-9cbd-ba7c2b69b3fe/","result":{"data":{"site":{"siteMetadata":{"title":"KSoonYo Blog"}},"notionPage":{"title":"[Javascript] SVG 태그의 <text>에서 말줄임표 구현하기","contentHtml":"<h1>TL;DR;</h1><li>svg의 <text> 태그에 말줄임표 스타일 속성(ellipsis) 적용이 안된다.</li><li>텍스트 전체 길이와 svg의 text 요소 너비를 계산하여 말줄임표 문자를 직접 추가해주면 말줄임표 효과를 적용할 수 있다.</li><h1>서론</h1><p>css 속성 중 text-overflow 의 ellipsis 을 이용하면, 텍스트가 너비를 벗어날 때 간단히 말줄임표 처리를 할 수 있다.</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Text Overflow Ellipsis Example</title>\n    <style>\n      .container {\n        width: 200px; /* 컨테이너 너비 설정 */\n        border: 1px solid #ccc; /* 경계선 추가 */\n        padding: 10px; /* 패딩 추가 */\n        font-size: 16px; /* 글자 크기 설정 */\n      }\n\n      .ellipsis {\n        margin: 0; /* 기본 여백 제거 */\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n        white-space: nowrap; /* 텍스트를 한 줄로 제한 */\n        text-overflow: ellipsis; /* 말줄임표를 추가 */\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <p class=\"ellipsis\">\n        말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표\n        표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시\n        텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\n      </p>\n    </div>\n  </body>\n</html>\n\n--></code></pre><img src=\"https://velog.velcdn.com/images/flashsoon/post/8852fd78-caaf-4d7c-ae0f-635198529457/image.png\" alt=\"undefined\" /><p>참고) <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow</a></p><p></p><p>위 마크업에서 svg의 text 요소를 사용한 것으로 수정하면 아래와 같다.</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SVG Text Ellipsis Example</title>\n    <style>\n      svg {\n        width: 200px; /* 컨테이너 너비 설정 */\n        height: 40px;\n        border: 1px solid #ccc; /* 경계선 추가 */\n      }\n      text {\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n        white-space: nowrap; /* 텍스트를 한 줄로 제한 */\n        text-overflow: ellipsis; /* 말줄임표를 추가 */\n      }\n    </style>\n  </head>\n  <body>\n    <svg>\n      <text x=\"0\" y=\"20\" font-size=\"16\" fill=\"black\">\n        말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표\n        표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시\n        텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\n      </text>\n    </svg>\n  </body>\n</html>\n\n--></code></pre><li>하지만 svg의 text 요소에는 말줄임표가 적용되어있지 않다.</li><img src=\"https://velog.velcdn.com/images/flashsoon/post/572806a1-e755-4433-8769-a313ee9e0d7b/image.png\" alt=\"undefined\" /><li>svg 태그에 적용할 수 있는 css 속성은 span이나 div 처럼 일반적인 DOM 요소에 적용할 수 있는 속성과 차이가 있기 때문에 스타일 속성을 그대로 적용할 수 없다!</li><p>그래서 구글에 검색을 해보면 <text> 요소에 말줄임표 효과를 적용하기 위한 여러 글이 있는 것을 확인할 수 있다.</p><p></p><p>이번 글은 이러한 방법들 중 하나를 소개하는 글이다.\n(코드 예시는 Typescript로 작성함)</p><h1>설명</h1><h2>1. 함수 정의 및 매개변수</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">async function trimTextToFitWidth(\n  textElement: SVGTextElement,\n  maxWidth: number,\n  originText: string = ''\n)\n\n</code></pre><li>여러 <text> 요소에 대해 효율적으로 말줄임표 처리를 하기 위해 비동기 함수로 정의</li><li>textElement 가 바로 <text> 요소를 나타내는 매개변수를 의미</li><li>maxWidth는 텍스트가 들어갈 수 있는 최대 너비</li><h2>2. 변수 초기화</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">let text = originText;\nconst ellipsis = '···';\n</code></pre><h2>3. 텍스트 너비 체크 함수 정의</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">const isTooWide = (str: string) => {\n  textElement.textContent = str;\n  return textElement.getComputedTextLength() > maxWidth;\n};\n</code></pre><li>getComputedTextLength() 는 현재 텍스트의 너비를 반환</li><li>인자로 문자열을 받고 textElement의 컨텐츠로 할당 후에 최대 너비를 초과하는지 체크</li><h2>4.🐱‍🏍(핵심) 이분 탐색을 통한 최적의 텍스트 길이 찾기</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">let start = 0;\nlet end = text.length;\nwhile (start < end) {\n  let mid = Math.floor((start + end) / 2);\n  if (isTooWide(text.slice(0, mid) + ellipsis)) {\n    end = mid;\n  } else {\n    start = mid + 1;\n  }\n}\n</code></pre><li>가장 핵심인 부분</li><li>알고리즘 문제 푸는 것도 아니고 무슨 이분 탐색인가 싶지만 textElement 내에서 최대한 자연스럽게 말줄임 스타일을 적용하기 위한 방법</li><li>여기서 수행하는 작업의 핵심은 3가지 \n(1) 텍스트의 가운데 길이에서 말줄임표 텍스트를 더한 문자열이 최대 너비를 초과하는지 체크\n(2-1) 초과한다면 현재 텍스트를 절반으로 자르고, 뒤에 있는 문자열을 모두 버린다.(실제 원문 텍스트를 수정하는 것이 아님에 유의!)\n(2-2) 초과하지 않는다면 최대한 textElement에 긴 텍스트를 쓰기 위해 시작점을 뒤로 하여 텍스트 요소 내의 마지막 끝 문자로 최대한 텍스트 뒤에 있는 문자를 선택</li><p>그림으로 보면 매우 간단하다.</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/64944299-422e-47bd-93de-4e8e0f9339cd/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/dde07642-96f5-47df-a326-5d3d40345849/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/f5a90fba-a535-4b3b-adcf-ef2a00443275/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/c0c9f100-64ed-48f2-96e3-05447a1c3e2d/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/77812b42-a95b-4eb0-a25b-f9f7efaac115/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/e95e4c19-37fa-4429-b5a9-1e622c699c00/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/8ca46729-65d1-42ea-b6c7-3157c4235031/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/093dc1ed-be86-47f5-a167-d0443d5cca57/image.png\" alt=\"undefined\" /><h2>5. 최종 텍스트 설정</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">textElement.textContent = text.slice(0, start - 1) + ellipsis;</code></pre><h1>전체 코드</h1><pre class=\"language-typescript\"><code class=\"language-typescript\">// text에 ellipsis 효과를 주기 위한 함수\nasync function trimTextToFitWidth(\n  textElement: SVGTextElement,\n  maxWidth: number,\n  originText: string = ''\n) {\n  let text = originText;\n  const ellipsis = '···';\n\n  const isTooWide = (str: string) => {\n    textElement.textContent = str;\n    return textElement.getComputedTextLength() > maxWidth;\n  };\n\n  // 텍스트가 maxWidth를 넘는지 check\n  if (!isTooWide(text)) return;\n\n  // maxWidth 이내에 가장 끝 글자를 바이너리 서치로 탐색\n  let start = 0;\n  let end = text.length;\n  while (start < end) {\n    let mid = Math.floor((start + end) / 2);\n    if (isTooWide(text.slice(0, mid) + ellipsis)) {\n      end = mid;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  // 가장 끝 글자를 지우고 말줄임표 추가\n  textElement.textContent = text.slice(0, start - 1) + ellipsis;\n}\n</code></pre><h1>적용</h1><p>이제 앞에서 말줄임표가 적용되지 않았던 코드에 적용해본다.</p><p>html 문서로 나타내기 위해 Typescript는 Javascript로 변환하여 적용</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SVG Text Overflow Ellipsis Example</title>\n    <style>\n      svg {\n        width: 200px; /* 컨테이너 너비 설정 */\n        border: 1px solid #ccc; /* 경계선 추가 */\n        height: 40px; /* 컨테이너 높이 설정 */\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n      }\n    </style>\n  </head>\n  <body>\n    <svg>\n      <text id=\"myText\" x=\"0\" y=\"20\" font-size=\"16\" fill=\"black\"></text>\n    </svg>\n\n    <script>\n      // text에 ellipsis 효과를 주기 위한 함수\n      async function trimTextToFitWidth(\n        textElement,\n        maxWidth,\n        originText = \"\"\n      ) {\n        let text = originText;\n        const ellipsis = \"···\";\n\n        const isTooWide = (str) => {\n          textElement.textContent = str;\n          return textElement.getComputedTextLength() > maxWidth;\n        };\n\n        // 텍스트가 maxWidth를 넘는지 check\n        if (!isTooWide(text)) return;\n\n        // maxWidth 이내에 가장 끝 글자를 바이너리 서치로 탐색\n        let start = 0;\n        let end = text.length;\n        while (start < end) {\n          let mid = Math.floor((start + end) / 2);\n          if (isTooWide(text.slice(0, mid) + ellipsis)) {\n            end = mid;\n          } else {\n            start = mid + 1;\n          }\n        }\n\n        // 가장 끝 글자를 지우고 말줄임표 추가\n        textElement.textContent = text.slice(0, start - 1) + ellipsis;\n      }\n\n      // 텍스트 설정 및 함수 호출\n      const textElement = document.getElementById(\"myText\");\n      const originalText =\n        \"말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\";\n\n      // 최대 너비를 설정하고 함수 호출\n      const maxWidth = 200; // 컨테이너 너비\n      trimTextToFitWidth(textElement, maxWidth, originalText);\n    </script>\n  </body>\n</html>\n\n--></code></pre><p>결과</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/969fe767-a50d-4646-a7f0-ac53ea6abc3b/image.png\" alt=\"undefined\" /><p>물론 ellipsis를 다른 문자로 변경하는 것도 가능\ntrimTextToFitWidth 함수 내에서 ellipsis 변수 초기화하는 부분을 '...'로 변경하면 아래와 같다.</p><pre class=\"language-javascript\"><code class=\"language-javascript\">const ellipsis = \"...\";\n</code></pre><p>결과</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/7220d794-6753-4222-ba86-1df7484654c8/image.png\" alt=\"undefined\" />"}},"pageContext":{"id":"c3b8483b-3631-5313-9cbd-ba7c2b69b3fe","title":"[Javascript] SVG 태그의 <text>에서 말줄임표 구현하기","contentHtml":"<h1>TL;DR;</h1><li>svg의 <text> 태그에 말줄임표 스타일 속성(ellipsis) 적용이 안된다.</li><li>텍스트 전체 길이와 svg의 text 요소 너비를 계산하여 말줄임표 문자를 직접 추가해주면 말줄임표 효과를 적용할 수 있다.</li><h1>서론</h1><p>css 속성 중 text-overflow 의 ellipsis 을 이용하면, 텍스트가 너비를 벗어날 때 간단히 말줄임표 처리를 할 수 있다.</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Text Overflow Ellipsis Example</title>\n    <style>\n      .container {\n        width: 200px; /* 컨테이너 너비 설정 */\n        border: 1px solid #ccc; /* 경계선 추가 */\n        padding: 10px; /* 패딩 추가 */\n        font-size: 16px; /* 글자 크기 설정 */\n      }\n\n      .ellipsis {\n        margin: 0; /* 기본 여백 제거 */\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n        white-space: nowrap; /* 텍스트를 한 줄로 제한 */\n        text-overflow: ellipsis; /* 말줄임표를 추가 */\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <p class=\"ellipsis\">\n        말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표\n        표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시\n        텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\n      </p>\n    </div>\n  </body>\n</html>\n\n--></code></pre><img src=\"https://velog.velcdn.com/images/flashsoon/post/8852fd78-caaf-4d7c-ae0f-635198529457/image.png\" alt=\"undefined\" /><p>참고) <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow</a></p><p></p><p>위 마크업에서 svg의 text 요소를 사용한 것으로 수정하면 아래와 같다.</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SVG Text Ellipsis Example</title>\n    <style>\n      svg {\n        width: 200px; /* 컨테이너 너비 설정 */\n        height: 40px;\n        border: 1px solid #ccc; /* 경계선 추가 */\n      }\n      text {\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n        white-space: nowrap; /* 텍스트를 한 줄로 제한 */\n        text-overflow: ellipsis; /* 말줄임표를 추가 */\n      }\n    </style>\n  </head>\n  <body>\n    <svg>\n      <text x=\"0\" y=\"20\" font-size=\"16\" fill=\"black\">\n        말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표\n        표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시\n        텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\n      </text>\n    </svg>\n  </body>\n</html>\n\n--></code></pre><li>하지만 svg의 text 요소에는 말줄임표가 적용되어있지 않다.</li><img src=\"https://velog.velcdn.com/images/flashsoon/post/572806a1-e755-4433-8769-a313ee9e0d7b/image.png\" alt=\"undefined\" /><li>svg 태그에 적용할 수 있는 css 속성은 span이나 div 처럼 일반적인 DOM 요소에 적용할 수 있는 속성과 차이가 있기 때문에 스타일 속성을 그대로 적용할 수 없다!</li><p>그래서 구글에 검색을 해보면 <text> 요소에 말줄임표 효과를 적용하기 위한 여러 글이 있는 것을 확인할 수 있다.</p><p></p><p>이번 글은 이러한 방법들 중 하나를 소개하는 글이다.\n(코드 예시는 Typescript로 작성함)</p><h1>설명</h1><h2>1. 함수 정의 및 매개변수</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">async function trimTextToFitWidth(\n  textElement: SVGTextElement,\n  maxWidth: number,\n  originText: string = ''\n)\n\n</code></pre><li>여러 <text> 요소에 대해 효율적으로 말줄임표 처리를 하기 위해 비동기 함수로 정의</li><li>textElement 가 바로 <text> 요소를 나타내는 매개변수를 의미</li><li>maxWidth는 텍스트가 들어갈 수 있는 최대 너비</li><h2>2. 변수 초기화</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">let text = originText;\nconst ellipsis = '···';\n</code></pre><h2>3. 텍스트 너비 체크 함수 정의</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">const isTooWide = (str: string) => {\n  textElement.textContent = str;\n  return textElement.getComputedTextLength() > maxWidth;\n};\n</code></pre><li>getComputedTextLength() 는 현재 텍스트의 너비를 반환</li><li>인자로 문자열을 받고 textElement의 컨텐츠로 할당 후에 최대 너비를 초과하는지 체크</li><h2>4.🐱‍🏍(핵심) 이분 탐색을 통한 최적의 텍스트 길이 찾기</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">let start = 0;\nlet end = text.length;\nwhile (start < end) {\n  let mid = Math.floor((start + end) / 2);\n  if (isTooWide(text.slice(0, mid) + ellipsis)) {\n    end = mid;\n  } else {\n    start = mid + 1;\n  }\n}\n</code></pre><li>가장 핵심인 부분</li><li>알고리즘 문제 푸는 것도 아니고 무슨 이분 탐색인가 싶지만 textElement 내에서 최대한 자연스럽게 말줄임 스타일을 적용하기 위한 방법</li><li>여기서 수행하는 작업의 핵심은 3가지 \n(1) 텍스트의 가운데 길이에서 말줄임표 텍스트를 더한 문자열이 최대 너비를 초과하는지 체크\n(2-1) 초과한다면 현재 텍스트를 절반으로 자르고, 뒤에 있는 문자열을 모두 버린다.(실제 원문 텍스트를 수정하는 것이 아님에 유의!)\n(2-2) 초과하지 않는다면 최대한 textElement에 긴 텍스트를 쓰기 위해 시작점을 뒤로 하여 텍스트 요소 내의 마지막 끝 문자로 최대한 텍스트 뒤에 있는 문자를 선택</li><p>그림으로 보면 매우 간단하다.</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/64944299-422e-47bd-93de-4e8e0f9339cd/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/dde07642-96f5-47df-a326-5d3d40345849/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/f5a90fba-a535-4b3b-adcf-ef2a00443275/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/c0c9f100-64ed-48f2-96e3-05447a1c3e2d/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/77812b42-a95b-4eb0-a25b-f9f7efaac115/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/e95e4c19-37fa-4429-b5a9-1e622c699c00/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/8ca46729-65d1-42ea-b6c7-3157c4235031/image.png\" alt=\"undefined\" /><img src=\"https://velog.velcdn.com/images/flashsoon/post/093dc1ed-be86-47f5-a167-d0443d5cca57/image.png\" alt=\"undefined\" /><h2>5. 최종 텍스트 설정</h2><pre class=\"language-typescript\"><code class=\"language-typescript\">textElement.textContent = text.slice(0, start - 1) + ellipsis;</code></pre><h1>전체 코드</h1><pre class=\"language-typescript\"><code class=\"language-typescript\">// text에 ellipsis 효과를 주기 위한 함수\nasync function trimTextToFitWidth(\n  textElement: SVGTextElement,\n  maxWidth: number,\n  originText: string = ''\n) {\n  let text = originText;\n  const ellipsis = '···';\n\n  const isTooWide = (str: string) => {\n    textElement.textContent = str;\n    return textElement.getComputedTextLength() > maxWidth;\n  };\n\n  // 텍스트가 maxWidth를 넘는지 check\n  if (!isTooWide(text)) return;\n\n  // maxWidth 이내에 가장 끝 글자를 바이너리 서치로 탐색\n  let start = 0;\n  let end = text.length;\n  while (start < end) {\n    let mid = Math.floor((start + end) / 2);\n    if (isTooWide(text.slice(0, mid) + ellipsis)) {\n      end = mid;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  // 가장 끝 글자를 지우고 말줄임표 추가\n  textElement.textContent = text.slice(0, start - 1) + ellipsis;\n}\n</code></pre><h1>적용</h1><p>이제 앞에서 말줄임표가 적용되지 않았던 코드에 적용해본다.</p><p>html 문서로 나타내기 위해 Typescript는 Javascript로 변환하여 적용</p><pre class=\"language-markup\"><code class=\"language-markup\"><!--<!DOCTYPE html>\n<html lang=\"ko\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>SVG Text Overflow Ellipsis Example</title>\n    <style>\n      svg {\n        width: 200px; /* 컨테이너 너비 설정 */\n        border: 1px solid #ccc; /* 경계선 추가 */\n        height: 40px; /* 컨테이너 높이 설정 */\n        overflow: hidden; /* 넘치는 콘텐츠 숨기기 */\n      }\n    </style>\n  </head>\n  <body>\n    <svg>\n      <text id=\"myText\" x=\"0\" y=\"20\" font-size=\"16\" fill=\"black\"></text>\n    </svg>\n\n    <script>\n      // text에 ellipsis 효과를 주기 위한 함수\n      async function trimTextToFitWidth(\n        textElement,\n        maxWidth,\n        originText = \"\"\n      ) {\n        let text = originText;\n        const ellipsis = \"···\";\n\n        const isTooWide = (str) => {\n          textElement.textContent = str;\n          return textElement.getComputedTextLength() > maxWidth;\n        };\n\n        // 텍스트가 maxWidth를 넘는지 check\n        if (!isTooWide(text)) return;\n\n        // maxWidth 이내에 가장 끝 글자를 바이너리 서치로 탐색\n        let start = 0;\n        let end = text.length;\n        while (start < end) {\n          let mid = Math.floor((start + end) / 2);\n          if (isTooWide(text.slice(0, mid) + ellipsis)) {\n            end = mid;\n          } else {\n            start = mid + 1;\n          }\n        }\n\n        // 가장 끝 글자를 지우고 말줄임표 추가\n        textElement.textContent = text.slice(0, start - 1) + ellipsis;\n      }\n\n      // 텍스트 설정 및 함수 호출\n      const textElement = document.getElementById(\"myText\");\n      const originalText =\n        \"말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트말줄임표 표시 텍스트\";\n\n      // 최대 너비를 설정하고 함수 호출\n      const maxWidth = 200; // 컨테이너 너비\n      trimTextToFitWidth(textElement, maxWidth, originalText);\n    </script>\n  </body>\n</html>\n\n--></code></pre><p>결과</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/969fe767-a50d-4646-a7f0-ac53ea6abc3b/image.png\" alt=\"undefined\" /><p>물론 ellipsis를 다른 문자로 변경하는 것도 가능\ntrimTextToFitWidth 함수 내에서 ellipsis 변수 초기화하는 부분을 '...'로 변경하면 아래와 같다.</p><pre class=\"language-javascript\"><code class=\"language-javascript\">const ellipsis = \"...\";\n</code></pre><p>결과</p><img src=\"https://velog.velcdn.com/images/flashsoon/post/7220d794-6753-4222-ba86-1df7484654c8/image.png\" alt=\"undefined\" />"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}